import { mergeTwoLists } from '../src/exercises/merge-two-sorted-lists';
import { search } from '../src/exercises/binary-search';
import { searchInsert } from '../src/exercises/searchInsertPosition';
import { targetIndices } from '../src/exercises/findTargetIndiceAfterSortingArray';
import { maxDepth } from '../src/exercises/maximunNestingDepthParentases';
import { removeOuterParentheses } from '../src/exercises/removeOutermostParenthases';
import { finalPrices } from '../src/exercises/findPriceWithSpecialDiscount';
import { calPoints } from '../src/exercises/baseballGame';
import { removeDuplicates } from '../src/exercises/removeAllDuplicateAdjacent';
import { countStudents } from '../src/exercises/1700.Number_of_student_unable_to_eat_lunch';
import { timeRequiredToBuy } from '../src/exercises/2073.Time_Needed_to_Buy_Tickets';
import { firstUniqChar } from '../src/exercises/387.First_Unique_Character_in_a_String';
// import { minOperations } from '../src/exercises/1598.Crawler_Log_Folder';
import { numJewelsInStones } from '../src/exercises/771.Jewels_and_Stones';
import { decodeMessage } from '../src/exercises/2325.Decode_the_Message';
import { arithmeticTriplets } from '../src/exercises/2367.Number_of_Arithmetic_Triplets';
import { checkIfPangram } from '../src/exercises/1832.Check_if_the_Sentence_Is_Pangram';
import { reverseWords } from '../src/exercises/557.Reverse_Words_in_a_String_III';
import { mergeAlternately } from '../src/exercises/1768.Merge_Strings_Alternately';
import { removePalindromeSub } from '../src/exercises/1332.Remove_Palindromic_Subsequences';
import { sortArrayByParity } from '../src/exercises/905.Sort_Array_By_Parity';
import { shortestToChar } from '../src/exercises/821.Shortest_Distance_to_a_Character.js';
import { intersection } from '../src/exercises/349.Intersection_of_Two_Arrays';
import { sortArrayByParityII } from '../src/exercises/922.Sort_Array_By_Parity_II.js';
import { findTheArrayConcVal } from '../src/exercises/2562.Find_the_Array_Concatenation_Value.js';
import { reverseOnlyLetters } from '../src/exercises/917.Reverse_Only_Letters.js';
import { countGoodSubstrings } from '../src/exercises/1876.Substrings_of_Size_Three_with_Distinct_Characters.js';
import { checkIsNiceString } from '../src/exercises/1763.Longest_Nice_Substring.js';
import { longestNiceSubstring } from '../src/exercises/1763.Longest_Nice_Substring.js';
import { divisorSubstrings } from '../src/exercises/2269.Find_the_K-Beauty_of_a_Number.js';
import { minimumRecolors } from '../src/exercises/2379.Minimum_Recolors_to_Get_K_Consecutive_Black_Blocks.js';
import { minimumDifference } from '../src/exercises/1984.Minimum_Difference_Between_Highest_and_Lowest_of_K_Scores.js';
import { containsNearbyDuplicate } from '../src/exercises/219.Contains_Duplicate_II.js';
import { minimumSum } from '../src/exercises/2160.Minimum_Sum_of_Four_Digit_Number_After_Splitting_Digits.js';
import { balancedStringSplit } from '../src/exercises/1221.Split_a_String_in_Balanced_Strings.js';
import { minOperations } from '../src/exercises/1827.Minimum_Operations_to_Make_the_Array_Increasing.js';
import { diStringMatch } from '../src/exercises/942.DI_String_Match.js';
import { arrayPairSum } from '../src/exercises/561.Array_Partition.js';
let result = arrayPairSum([6, 2, 6, 5, 1, 2]);
console.log('result: ', result);
